openapi: 3.0.0
info:
  title: Task Manager
  contact: {}
  version: '1.0'
servers:
- url: http://week-11-hlmyrsyd-railway-production.up.railway.app/api/v1
  variables: {}
paths:
  /tasks:
    get:
      tags:
      - Misc
      summary: Get All Tasks
      operationId: GetAllTasks
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
      - Misc
      summary: Post Task
      operationId: PostTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PostTaskRequest'
              - example:
                  name: test other delete
            example:
              name: test other delete
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /tasks/:id:
    get:
      tags:
      - Misc
      summary: Get Single Task
      operationId: GetSingleTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    patch:
      tags:
      - Misc
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateTaskRequest'
              - example:
                  name: Stephen
                  completed: true
            example:
              name: Stephen
              completed: true
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Misc
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /user/register:
    post:
      tags:
      - Auth
      summary: Register user
      operationId: Registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/RegisteruserRequest'
              - example:
                  name: Test 1
                  email: test@this.com
                  password: password
            example:
              name: Test 1
              email: test@this.com
              password: password
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /user/login:
    post:
      tags:
      - Auth
      summary: Login user
      operationId: Loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/LoginuserRequest'
              - example:
                  name: Test 1
                  email: test@this.com
                  password: password
            example:
              name: Test 1
              email: test@this.com
              password: password
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    PostTaskRequest:
      title: PostTaskRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
      example:
        name: test other delete
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
      - name
      - completed
      type: object
      properties:
        name:
          type: string
        completed:
          type: boolean
      example:
        name: Stephen
        completed: true
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Test 1
        email: test@this.com
        password: password
    LoginuserRequest:
      title: LoginuserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Test 1
        email: test@this.com
        password: password
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Misc
  description: ''
- name: Auth
  description: ''